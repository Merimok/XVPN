name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.24.3'

      - name: Install dependencies
        run: flutter pub get
        working-directory: vpn_client

      - name: Ensure Windows platform
        shell: bash
        working-directory: vpn_client
        run: |
          if [ ! -f "windows/CMakeLists.txt" ] || [ ! -d "windows/runner" ]; then
            flutter create --platforms=windows .
          else
            flutter create --platforms=windows .
          fi

      - name: Download latest sing-box binary
        shell: bash
        run: |
          VERSION=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | grep '"tag_name":' | cut -d '"' -f4)
          FILE="sing-box-${VERSION#v}-windows-amd64.exe"
          URL="https://github.com/SagerNet/sing-box/releases/download/${VERSION}/${FILE}"
          mkdir -p vpn_client/sing-box
          echo "Downloading $URL..."
          curl -L "$URL" -o "vpn_client/sing-box/sing-box.exe"

      - name: Download Wintun DLL
        shell: bash
        run: |
          echo "Downloading Wintun DLL..."
          curl -L "https://www.wintun.net/builds/wintun-0.14.1.zip" -o wintun.zip
          unzip -q wintun.zip
          mkdir -p vpn_client/sing-box
          cp wintun/bin/amd64/wintun.dll vpn_client/sing-box/wintun.dll
          rm -rf wintun.zip wintun

      - name: Build Windows release
        run: flutter build windows --release
        working-directory: vpn_client

      - name: Copy dependencies to release folder
        shell: cmd
        working-directory: vpn_client
        run: |
          copy sing-box\sing-box.exe build\windows\runner\Release\sing-box.exe
          if exist sing-box\wintun.dll copy sing-box\wintun.dll build\windows\runner\Release\wintun.dll

      - name: Create ZIP archive
        shell: bash
        working-directory: vpn_client/build/windows/runner/Release
        run: |
          if command -v 7z >/dev/null 2>&1; then
            7z a -tzip ../../XVPN-Windows-${{ github.ref_name }}.zip .
          else
            powershell -Command "Compress-Archive -Path * -DestinationPath ../../XVPN-Windows-${{ github.ref_name }}.zip"
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: vpn_client/build/XVPN-Windows-${{ github.ref_name }}.zip
